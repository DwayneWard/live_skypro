# Задача 1
# В списке есть несколько чисел.
numbers = [4,5,7,8,10]
# Пользователь  вводит с клавиатуры число.
# Выведите в зависимости от попадания  числа в предоставленный ряд:
# Число есть / Числа нет

# Ваше решение пишите ниже


# Задача 2
# В списке есть несколько чисел.
numbers = [4,5,7,8,10]
# Пользователь  вводит с клавиатуры два числа.
# Выведите в зависимости от попадания этих чисел в предоставленный ряд:
# Оба числа есть
# Одно из чисел есть
# Ни одного из чисел нет

# Ваше решение пишите ниже


# Задача 3
# В списке есть несколько чисел. Просуммируйте только те, которые меньше 10.
numbers = [10, 4, 5, 10, 7, 8, 10]
# Пример вывода:
# 40

# Ваше решение пишите ниже



# Задача 4
# Есть список. Выведите, сколько в нем чисел 1 и 2 вместе
numbers = [10, 4, 5, 1, 2, 10, 7, 8, 1, 2, 10]
# Пример вывода:
# 4

# Ваше решение пишите ниже

# Задача 5
# Есть два списка:
numbers_1 = [1, 2, 3, 4, 5, 6, 7]
numbers_2 = [8, 9, 10, 11, 12]
#
# Вычислите среднее в каждом списке (среднее это сумма деленная на количество).
#
# Выведите:
# Первое среднее больше
# или
# Второе среднее больше
# или
# Средние одинаковые

# Ваше решение пишите ниже

# Задача 6
# У вас есть список слов. Запишите в новый список длину каждого слова, выведите список
words = ["Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot"]
# Пример списка:
# [5,5,7,5,4,7]

# Ваше решение пишите ниже


# Задача 7
# У вас есть список слов
letters = ["Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot"]
# Выведите в отдельном списке четные и отдельно нечетные элементы
# Нечетные
#
# Alpha
# Charlie
# Charlie
#
# Четные
#
# Bravo
# Delta
# Foxtrot

# Ваше решение пишите ниже

# Задача 8
# У вас есть список гласных.
# Запишите в новый список встреченные согласные.
letters = ["A", "B", "I", "O", "Q", "Z"]
vowels = ["A", "E", "I", "O", "U", "Y"]
# Пример списка:
# words = ["B", "Q", "Z"]

# Ваше решение пишите ниже

# Задача 9
# Пользователь вводит два целых числа.
# Заполните список четными числами, которые есть в промежутке.
# Оба числа не входят в промежуток
# Ввод
# 1
# 5
#
# Вывод
# 2
# 4
#
#
# Ввод
# 5
# 10
#
# Вывод
# 6
# 8

# Ваше решение пишите ниже

# Задача 10
# У вас есть список из чисел.
# Соберите список позиций (индексов) на которых расположены 0 и 1
items = [7,62,1,3,1,2,0,1]
# Пример вывода:
# [2, 4, 6, 7]

# Ваше решение пишите ниже

# Задача 11
# У нас есть список из элементов.
# Соберите список позиций (индексов) на которых расположены числа.
# Для проверки используй метод строки '.isdigit()'
items = ["0", "1", "resist", "2", "tower", "3", "alpha", "4"]
# Пример вывода:
# [0, 1, 3, 5, 7]

# Ваше решение пишите ниже

# Задача 12
# Вывести все элементы списка кроме слов "Пропуск"
keywords = ["Желание", "Семнадцать", "Пропуск", "Ржавый", "Пропуск", "Печь" ]
# Пример ответа:
# Желание Семнадцать Ржавый Печь

# Ваше решение пишите ниже


# Задача 13
# Телеграмма
# Превратите список в сообщение, замените "тчк" на "." "зпт" на ","
list_w_spaces = ["узнать", "зпт", "сделать", "зпт", "порадоваться", "тчк"]
# Пример ответа:
# узнать, сделать, порадоваться.

# Ваше решение пишите ниже

# Задача 14
# Игра в дартс
# Правила игры такие:
# Вы начинаете с 0 очков
# все очки, которые вы набрали складываются , но, если вы промахнулись
# (набрали 0), то теряете 10 за первый раз, 20 за второй 30 за 3 и так далее
# Есть список бросков, узнать сумму
throws = [5, 3, 2, 10, 5, 0, 5, 20, 0, 10]

# Ваше решение пишите ниже

# Задача 15
# В доме живут жители от 0 до 99 лет, вычислите средний возраст
residents = [5, 3, 2, 20, 5, 30, 5, 40, 17]
# Пример ответа:
# 15

# Ваше решение пишите ниже

# На for i in range()
# Задача 16
# Вывести список из 8 степеней числа 2
a = 2
# пример ответа
# 1 2 4 8 16 32 64 128

# Ваше решение пишите ниже

# Задача 17
# Вывести список всех чисел меньше 120, в которых присутствует цифра 1
# пример ответа
# 1 10 11 21 31 41 51 61 71 81 91 100 101 110 111

# Ваше решение пишите ниже

# Задача 18
# позиции нулей
# Вывести все позиции на которых стоят нули
sequence = [0, 1, 1, 0, 1, 0, 0, 1]
# пример ответа
# 0
# 3
# 5
# 6

# Ваше решение пишите ниже

# Задача 19
# Инверсия
# С помощью цикла выведите список в обратном порядке
letters = ["Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot"]
# Пример ответа:
# Foxtrot Echo Delta Charlie Bravo Alpha


# Ваше решение пишите ниже

# Задача 20
# Вывести пары слов из 2 списков в формате "Слово" – "Перевод"
en = ["Cat", "Dog", "Owl"]
ru = ["Котейка", "Собаня", "Совуня"]
#
# Пример ответа:
# Cat – Котейка
# Dog – Собаня
# Owl – Совуня


# Ваше решение пишите ниже


# Задача 21
# Спрашивайте сделал ли пользователь домашку, пока он не скажет да
# Пример ответа:
# Ты сделал домашку?
# > Нет
# Ты сделал домашку?
# > Угу
# Ты сделал домашку?
# > Да
# "Какой ты молодец"

# Ваше решение пишите ниже

# Задача 22
# Досчитайте от 1 до 5 с помощью while
# Пример ответа:
# 1
# 2
# 3
# 4
# 5

# Ваше решение пишите ниже

# Задача 23
# Вывести все элементы списка кроме слов "Пропуск" при помощи  while
keywords = ["Желание", "Семнадцать", "Пропуск", "Ржавый", "Пропуск", "Печь" ]
# Пример ответа:
# Желание Семнадцать Ржавый Печь

# Ваше решение пишите ниже

# Задача 24
# Вывести список в всех чисел от 0 до 100, которые не являются запрещенными,
# запрещенные числа лежат в restricted
restricted = [7, 17, 21, 40, 50, 60, 70, 100]

# Ваше решение пишите ниже
# Задача 25
# Выведите все слова до слова стоп
letters = ["Alpha", "Bravo", "Charlie", "stop", "Echo", "Foxtrot"]
# Пример ответа:
# Alpha Bravo  Charlie


# Ваше решение пишите ниже

# Задача 26
# Спрашивайте у пользователя (с помощью input()) ввод пока он не введет "хватит"
# и записывайте каждое полученное значение в список shopping_list
# Когда пользователь набрал "хватит", выведите список, например:
# Яблочки
# Сыр
# Бумага для принтера

# Ваше решение пишите ниже

# Задача 27

# Спрашивайте у пользователя список его трат, пока он не введет "хватит"
# и записывайте в список expenses
# Когда пользователь набрал "хватит", выведите список, например:


# --------------------------------
# Задачи для потока 9.1

# Задача 1
#
# Вывести на экран ряд чисел Фибоначчи, состоящий из N элементов. Значение N вводится с клавиатуры.
#
# Числа Фибоначчи – это элементы числовой последовательности 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …,
# в которой каждое последующее число равно сумме двух предыдущих.


# Задача 2

# Дано целое число, состоящее из разных цифр. Определить,
# какая из цифр заданного числа больше, т. е. найти наибольшую цифру числа.
#
# Переменные: n - задаваемое число, max - максимальная цифра числа.
#
# Задача 3
# "Переворот" числа
# Вводится число. Преобразовать его в другое число, цифры которого будут следовать в обратном порядке по сравнению с введенным числом.
#
# Введем переменные:
#
# n, m - исходное число и "перевернутое";
# a - временное хранение очередной цифры, которая "переносится" из одного числа в другое.
# Алгоритм решения задачи сводится к следующему циклу: 1) взять последнюю цифру в первом числе; 2) записать ее в конец второго; 3) убрать последнюю цифру из первого числа. Таким образом последняя цифра первого числа окажется первой цифрой во втором; предпоследняя цифра первого числа - второй во втором числе и так далее
#
# Находим остаток (mod) от деления числа n на 10. Результат сохраняем в переменной a.
# На каждом шаге разрядность m надо увеличивать на единицу, то есть умножать на 10. Например, если было число 56, то, умножив его на 10, получим 560. Далее следует прибавить остаток из переменной a, например, 3. В итоге получим 563. Получаем формулу: m = m * 10 + a.
# Делим n нацело на 10, тем самым избавляемся от младшего разряда.

# Задача 4
#
# Проверка гипотезы Сиракуз
# Возьмем любое натуральное число. Если оно четное - разделим его пополам,
# если нечетное - умножим на 3, прибавим 1 и разделим пополам.
# Повторим эти действия с вновь полученным числом. Гипотеза гласит,
# что независимо от выбора первого числа рано или поздно мы получим 1.
#
# Проверим гипотезу Сиракуз для всех чисел от 20 до 30.
#
# В цикле будем выполнять над числом действия: если оно четно, то делить на два,
# иначе - умножать на 3, прибавлять единицу и делить на 2.
# Эти действия будем выполнять до тех пор, пока число не станет равным единице.
# Если гипотеза Сиракуз не верна, и найдется такое число,
# которое не станет равным 1, то произойдет зацикливание.
