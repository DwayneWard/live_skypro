### 1
# Создай класс Room c полями
# number - число
# type - строка
# price - число с точкой

# Создайте несколько элементов и положите их словарь

# | number | type | price |
# | ---| --- | --- |
# | 12 | standard | 2000 |
# | 13 | standard | 2000 |
# | 14 | joint | 2500 |
# | 15 | suite | 3000 |
#
# Структура словаря
# {12: class_instance, 13: class_instance, 14: class_instance}
# Обработайте запрос с номером номера и выведите информацию о номере, типе и цене
# Входные данные
# 13
#
# Пример вывода:
# Номер: 13
# Тип номера: standard
# Цена за сутки: 2000

#2

# Создайте класс Soda (для определения типа газированной воды), принимающий 1 аргумент при инициализации
# (отвечающий за добавку к выбираемому лимонаду).
# В этом классе реализуйте метод show_my_drink(),
# выводящий на печать «Газировка и {ДОБАВКА}»
# в случае наличия добавки, а иначе отобразится следующая фраза: «Обычная газировка».

# 3
# Николаю требуется проверить, возможно ли из представленных отрезков условной длины сформировать треугольник.
# Для этого он решил создать класс TriangleChecker, принимающий только положительные числа.
# С помощью метода is_triangle() возвращаются следующие значения (в зависимости от ситуации):
# – Ура, можно построить треугольник!;
# – С отрицательными числами ничего не выйдет!;
# – Нужно вводить только числа!;
# – Жаль, но из этого треугольник не сделать.

# 4 НЕ РЕШАТЬ! УСЛОВИЯ НЕ ПОЛНЫЕ
# Создайте класс TomatoBush
# Определите метод __init__(), который будет принимать в качестве параметра количество
# томатов и на его основе будет создавать список объектов класса Tomato.
# Данный список будет храниться внутри атрибута tomatoes.
# Создайте метод grow_all(), который будет переводить все объекты из списка томатов на следующий этап созревания
# Создайте метод all_are_ripe(), который будет возвращать True, если все томаты из списка стали спелыми
# Создайте метод give_away_all(), который будет чистить список томатов после сбора урожая

# 5
# Напишите программу с классом Student, в котором есть три атрибута:name, group_number и age.
# По умолчанию name = Ivan, age = 18, group_number = 10A.
# Необходимо создать пять методов: get_name, get_age, get_group_number, set_name_age, set_group_number.
# Метод get_name нужен для получения данных об имени конкретного студента,
# метод getAge нужен для получения данных о возрасте конкретного студента,
# метод get_group_number нужен для получения данных о номере группы конкретного студента.
# Метод set_name_age позволяет изменить данные атрибутов установленных по умолчанию,
# метод set_group_number позволяет изменить номер группы установленный по умолчанию.
# В программе необходимо создать пять экземпляров класса Student, установить им разные имена, возраст и номер группы.

# 6
# Напишите программу с классом Math. Создайте два атрибута — a и b.
# Напишите методы addition — сложение, multiplication — умножение, division — деление, subtraction — вычитание.
# При передаче в методы параметров a и b с ними нужно производить соответствующие действия и печатать ответ.

# 7
# Напишите программу с классом Car. Создайте конструктор класса Car.
# Создайте атрибуты класса Car — color (цвет), type (тип), year (год).
# Напишите пять методов.
# Первый — запуск автомобиля, при его вызове выводится сообщение «Автомобиль заведен».
# Второй — отключение автомобиля — выводит сообщение «Автомобиль заглушен».
# Третий — присвоение автомобилю года выпуска.
# Четвертый метод — присвоение автомобилю типа.
# Пятый — присвоение автомобилю цвета.

# 8

